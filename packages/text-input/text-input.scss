@import "~@fremtind/jkl-core/_functions.scss";
@import "~@fremtind/jkl-core/mixins/_all.scss";
@import "~@fremtind/jkl-core/variables/_all.scss";

$text-input-height: rem(48px);
$text-input-height--compact: rem(40px);
$text-input-button-width: rem(48px);
$text-input-padding: $component-spacing--small;

// These are used to calculate textarea height,
// and MUST equal the line height in the text style used
$text-input-line-height: rem(32px);
$text-input-line-height--compact: rem(28px);

@import "theme";
@import "legacy"; // IE11 support

.jkl-text-input {
    @include reset-outline;

    &__input-wrapper {
        display: inline-flex;
        align-items: center;
        width: 100%;
    }

    &__input {
        border: none;
        outline: none;
        border-radius: rem(3px);
        -webkit-appearance: none;

        box-sizing: border-box;
        height: $text-input-height;
        padding: $text-input-padding;
        @include jkl-text-style("desktop/body");
        color: var(--text-input-text-color);
        background-color: var(--text-input-background-color);
        box-shadow: inset 0 0 0 rem(1px) var(--text-input-border-color), 0 0 0 0 var(--text-input-border-color);

        @include motion("standard");
        transition-property: color, box-shadow;

        /* Placeholder text style */
        &::placeholder {
            opacity: 1;
            color: var(--text-input-placeholder-color);
        }

        /* Color of text selection */
        &::selection {
            background-color: var(--text-input-selection-color);
        }

        /* Focus and hover states */
        &:hover,
        &:focus {
            --text-input-border-color: var(--text-input-focus-color);
            box-shadow: inset 0 0 0 rem(1px) var(--text-input-border-color),
                0 0 0 rem(1px) var(--text-input-border-color);
        }

        /*  Invalid states */
        &[aria-invalid="true"],
        &:invalid {
            --text-input-border-color: var(--text-input-error-color);

            &::selection {
                background-color: var(--text-input-selection-color--error);
            }
            &:focus,
            &:hover {
                --text-input-text-color: var(--text-input-error-color);
            }
        }
    }

    &__action-button {
        display: inline-flex;
        box-sizing: border-box;
        align-items: center;
        justify-content: center;
        border: none;
        background-color: transparent;
        cursor: pointer;
        padding: 0;
        padding: $component-spacing--small 0;
        height: $text-input-button-width;
        width: $text-input-height;
        margin-left: rem(-48px);
        color: inherit;

        &:focus,
        &:hover {
            color: var(--text-input-focus-color);
        }
    }

    /* Modifications for inline version */
    &--inline {
        display: inline-block;
        margin: rem(-2px) rem(4px);
    }

    /* Modifications for input with action */
    &--action {
        .jkl-text-input__input {
            padding-right: $text-input-height;
        }
    }

    /* Modifications for compact variant (also inline) */
    *[data-compactlayout] &,
    &--compact,
    &--inline {
        .jkl-text-input__input {
            @include jkl-text-style("compact/body");
            height: $text-input-height--compact;
        }
        .jkl-text-input__action-button {
            height: $text-input-height--compact;
        }
        .jkl-text-input__action-icon {
            width: rem(18px);
        }
    }
}

.jkl-text-area {
    height: auto;
    width: 100%;
    & .jkl-text-input__input {
        @include motion("standard");
        transition-property: height, box-shadow;
        font-weight: normal;
        width: 100%;
        resize: none; // Disable textarea resize
    }
}

/* Utility classes for number of rows */
@for $num from 3 through 10 {
    .jkl-text-input__input--#{$num}-rows:focus,
    .jkl-text-input__input--#{$num}-rows:not(:placeholder-shown) {
        height: $text-input-line-height * $num + $text-input-padding * 2;
        @include small-device {
            height: $text-input-line-height--compact * $num + $text-input-padding * 2;
        }
        .jkl-text-input--compact & {
            height: $text-input-line-height--compact * $num + $text-input-padding * 2;
        }
    }
}
